Архитектура MVC
===============

Phalcon поддерживает использование парадигмы объектно-ориентированного программирования и поддержку классов, необходимых для разделения на Модель, Представление, Контроллер
(Model, View, Controller, кратко MVC_). Этот шаблон проектирования активно используется в других веб-фреймворках
и desktop приложениях.

Преимущества MVC:

* Отделение бизнес-логики от пользовательского интерфейса и работы с базой данных;
* Позволяет располагать разные части в разных местах, что благоприятно сказывается на поддержке и обслуживании.

Если вы выберете MVC, все запросы будут выполнятся согласно MVC архитектуре.
Phalcon поддерживает MVC своими классами, написанными на C, что позволяет добиться высокой производительности PHP приложения.

Модели
------
Модель отвечает за информацию (данные) приложения и правила управления этими данными. Модели в основном используется для
управления соответствующей таблицей базы данных и правил взаимодействия с ней. В большинстве случаев каждая таблица в базе данных будет соответствовать
одной модели в вашем приложении. Основная часть бизнес-логики приложения будет сосредоточена в моделях. :doc:`Подробнее про модели <models>`

Представления
-------------
Представление отвечает за пользовательский интерфейс вашего приложения. Чаще всего это HTML файлы с вставками PHP кода
исключительно для вывода данных. Этот слой отвечает за вывод данных в веб-браузер или другой инструмент, который
обращается к вашему приложению. :doc:`Подробнее про представления <views>`

Контроллеры
-----------
Контроллеры обеспечивают обмен данными между моделью и представлением. Контроллеры ответственны за обработку входящих запросов
от веб-браузера, запрашивание данных у модели и передачу этих данных в представление для вывода. :doc:`Подробнее про контроллеры <controllers>`

.. _MVC: http://ru.wikipedia.org/wiki/Model-View-Controller
